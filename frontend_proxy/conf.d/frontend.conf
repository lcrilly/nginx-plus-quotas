js_import conf.d/quota.js;

log_format kv '$time_iso8601 client=$remote_addr uri=$uri status=$status '
              'id=$request_id consumer=$http_consumer quota=$quota_remaining';

keyval_zone zone=quotas:1M sync timeout=32d; # Needs to be longer than the period
keyval $http_consumer $quota_remaining zone=quotas;

upstream backend_app {
    zone backend_app 64k;
    #server 127.0.0.1:8001; # fake_backend.conf
    server quotas_poc_backend_app_1:80;
        
    keepalive 64;
    keepalive_requests 10000;
    keepalive_timeout 300s;
}       

server {
    listen 80;

    location / {
        auth_request /_check_quota;
        mirror /_decrement_quota;
        add_header X-Quota-Remaining $quota_remaining always;
        error_page 403 = @too_many_requests;

        proxy_pass http://backend_app;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header balance $quota_remaining;
        proxy_set_header frontend $server_addr;
    }

    location = /_check_quota {
        internal;
        js_content quota.checkQuota;
    }

    location = /_decrement_quota {
        internal;
        proxy_pass http://decrement_svc;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    location @too_many_requests {
        add_header Content-Type text/plain;
        add_header X-Quota-Remaining $quota_remaining always;
        return 429 "Quota exhausted\n";
    }

    access_log /var/log/nginx/access.log kv;
}
